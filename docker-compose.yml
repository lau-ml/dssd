version: '3.9'

services:
  angular_app:
    container_name: angular_app
    image: dssd-angular-app:1.0.0
    build:
      context: ./cliente
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    depends_on:
      - java_app

  java_app:
    container_name: java_app
    image: dssd-java-app:1.0.0
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - .:/app
    depends_on:
      - java_db
    environment:
      - DB_URL=jdbc:postgresql://java_db:5432/dssd
      - DB_USERNAME=postgres
      - DB_PASSWORD=admin

  java_db:
    container_name: java_db
    image: postgres:16.1
    ports:
      - "5434:5432"
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=admin
        - POSTGRES_DB=dssd


  java_api_ecocycle:
    container_name: java_api_ecocycle
    image: dssd-java-api-ecocycle:1.0.0
    build:
      context: ./api-ecocycle
      dockerfile: Dockerfile
    ports:
        - "8082:8081"
    depends_on:
        - java_api_ecocycle_db
    environment:
        - DB_API_URL=jdbc:postgresql://java_api_ecocycle_db:5432/api_ecocycle
        - DB_API_USERNAME=postgres
        - DB_API_PASSWORD=admin

  java_api_ecocycle_db:
    container_name: java_api_ecocycle_db
    image: postgres:16.1
    ports:
        - "5433:5432"
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=admin
        - POSTGRES_DB=api_ecocycle
  bonita-db:
    image: bonitasoft/bonita-postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: my-secret-pw
    restart: always
    # Uncomment those lines to mount a volume with your dumps
    #volumes:
    #  - ~/my/test/dumps:/opt/bonita/dump

    # In case you have built an Application, use instead as example:
    # my-application:
    #  image: my-application-[my built environment]:[my aplication's semantic version]
  bonita:
    image: bonita:2023.2-u0
    ports:
      - "8080:8080"
    environment:
      - DB_VENDOR=postgres
      - DB_HOST=bonita-db
      - DB_PORT=5432
      - DB_NAME=bonita
      - DB_USER=bonita
      - DB_PASS=bpm
      - BIZ_DB_NAME=business_data
      - BIZ_DB_USER=business_data
      - BIZ_DB_PASS=bpm
      - HTTP_API=true
      - HTTP_API_USERNAME=pfadmin
      - HTTP_API_PASSWORD=pfsecret
      - TENANT_LOGIN=tech_user
      - TENANT_PASSWORD=secret
      - PLATFORM_LOGIN=pfadmin
      - PLATFORM_PASSWORD=pfsecret
    restart: on-failure:2
    depends_on:
      bonita-db:
        # It uses the HEALTHCHECK of the database Docker image
        condition: service_healthy
